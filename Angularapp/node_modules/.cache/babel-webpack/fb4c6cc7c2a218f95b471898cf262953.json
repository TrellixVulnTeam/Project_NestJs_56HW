{"ast":null,"code":"import { SharedService } from '../shared.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/chips\";\nimport * as i13 from \"@angular/material/autocomplete\";\nconst _c0 = [\"fruitInput\"];\nconst _c1 = [\"auto\"];\n\nfunction Comp2Component_ng_container_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-option\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const Location_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", Location_r17.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(Location_r17.value);\n  }\n}\n\nfunction Comp2Component_ng_container_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-option\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const type_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", type_r18.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r18.value);\n  }\n}\n\nfunction Comp2Component_mat_chip_98_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 39);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Comp2Component_mat_chip_98_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 37);\n    i0.ɵɵlistener(\"removed\", function Comp2Component_mat_chip_98_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const fruit_r19 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.remove(fruit_r19);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, Comp2Component_mat_chip_98_mat_icon_2_Template, 2, 0, \"mat-icon\", 38);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fruit_r19 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectable\", ctx_r12.selectable)(\"removable\", ctx_r12.removable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r19, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.removable);\n  }\n}\n\nfunction Comp2Component_mat_option_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fruit_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", fruit_r23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r23, \" \");\n  }\n}\n\nexport class Comp2Component {\n  constructor(service, dialogRef) {\n    this.service = service;\n    this.dialogRef = dialogRef;\n    this.visible = true;\n    this.selectable = true;\n    this.removable = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.fruitCtrl = new FormControl();\n    this.fruits = [];\n    this.allFruits = ['JavaScript', 'NodeJs', 'AngularJs', 'MEAN Stack', 'Data Structures'];\n    this.eligibility = new FormControl('', [Validators.required]);\n    this.title = new FormControl('', [Validators.required]);\n    this.loc = new FormControl('', [Validators.required]);\n    this.Etype = new FormControl('', [Validators.required]);\n    this.Locations = [{\n      id: 1,\n      value: 'Mumbai'\n    }, {\n      id: 2,\n      value: 'Pune'\n    }, {\n      id: 3,\n      value: 'Bangalure'\n    }];\n    this.EmpTypes = [{\n      id: 1,\n      value: 'Full Time'\n    }, {\n      id: 2,\n      value: 'Part Time'\n    }, {\n      id: 3,\n      value: 'Trainee'\n    }];\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map(fruit => fruit ? this._filter(fruit) : this.allFruits.slice()));\n  }\n\n  onClose() {\n    this.service.form.reset();\n    this.service.initializeFormGroup();\n    this.dialogRef.close();\n  }\n\n  onReset() {\n    this.service.form.reset();\n    this.service.initializeFormGroup(); //this.notificationService.success(':: Submitted successfully');\n  }\n\n  ngOnInit() {}\n\n  add(event) {\n    const value = (event.value || '').trim(); // Add our fruit\n\n    if (value) {\n      this.fruits.push(value);\n    } // Clear the input value\n\n\n    event.chipInput.clear();\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit) {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n  selected(event) {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allFruits.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n}\n\nComp2Component.ɵfac = function Comp2Component_Factory(t) {\n  return new (t || Comp2Component)(i0.ɵɵdirectiveInject(i1.SharedService), i0.ɵɵdirectiveInject(i2.MatDialogRef));\n};\n\nComp2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Comp2Component,\n  selectors: [[\"app-comp2\"]],\n  viewQuery: function Comp2Component_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fruitInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocomplete = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([SharedService])],\n  decls: 116,\n  vars: 25,\n  consts: [[1, \"container\"], [1, \"tool1\"], [1, \"fill-remaining-space\"], [\"mat-stroked-button\", \"\", \"tabIndex\", \"-1\", 1, \"btn-dialog-close\", 3, \"click\"], [1, \"normal-form\", 3, \"formGroup\", \"ngsubmit\"], [\"openingForm\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"_id\", 3, \"ngmodel\", \"ngmodelChange\"], [\"_id\", \"ngModel\"], [\"cols\", \"1\", \"rowHeight\", \"100px\", 3, \"gutterSize\"], [1, \"controles-container\"], [\"type\", \"hidden\", \"formControlName\", \"$key\"], [1, \"example-full-width\"], [2, \"color\", \"black\", \"font-size\", \"large\"], [\"matInput\", \"\", \"maxlength\", \"50\", \"placeholder\", \"Job Title\", \"required\", \"\", 3, \"formControl\", \"ngmodel\", \"ngmodelChange\"], [\"message\", \"\", \"name\", \"ngModel\"], [\"align\", \"start\"], [\"align\", \"end\"], [\"formControlName\", \"Location\", \"placeholder\", \"Location\", \"required\", \"\", 3, \"formControl\", \"ngmodel\", \"ngmodelChange\"], [\"name\", \"ngModel\"], [4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"EmployementType\", \"placeholder\", \"Employement type\", \"required\", \"\", 3, \"formControl\", \"ngmodel\", \"ngmodelChange\"], [\"matInput\", \"\", \"placeholder\", \"Eligibility\", \"required\", \"\", 3, \"formControl\", \"ngmodel\", \"ngmodelChange\"], [\"matInput\", \"\", \"placeholder\", \"Work will include\", 3, \"ngmodel\", \"ngmodelChange\"], [\"matInput\", \"\", \"placeholder\", \"Note\", 3, \"ngmodel\", \"ngmodelChange\"], [1, \"skills\"], [\"aria-label\", \"Fruit selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"ngmodel\", \"matChipInputTokenEnd\", \"ngmodelChange\"], [\"fruitInput\", \"\", \"name\", \"ngModel\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"button-row\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn1\"], [\"mat-raised-button\", \"\", 1, \"btn2\", 3, \"click\"], [3, \"value\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"]],\n  template: function Comp2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-toolbar\", 1);\n      i0.ɵɵelementStart(2, \"span\");\n      i0.ɵɵtext(3, \"Add new opening\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"span\", 2);\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function Comp2Component_Template_button_click_5_listener() {\n        return ctx.onClose();\n      });\n      i0.ɵɵelementStart(6, \"mat-icon\");\n      i0.ɵɵtext(7, \"clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngsubmit\", function Comp2Component_Template_form_ngsubmit_9_listener() {\n        return ctx.onSubmit(ctx.opening);\n      });\n      i0.ɵɵelementStart(11, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngmodelChange\", function Comp2Component_Template_input_ngmodelChange_11_listener($event) {\n        return ctx.sharedService.selectedOpening._id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-grid-list\", 8);\n      i0.ɵɵelementStart(14, \"mat-grid-tile\");\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementStart(17, \"mat-form-field\", 11);\n      i0.ɵɵelementStart(18, \"mat-label\", 12);\n      i0.ɵɵelementStart(19, \"b\");\n      i0.ɵɵtext(20, \"Job Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngmodelChange\", function Comp2Component_Template_input_ngmodelChange_21_listener($event) {\n        return ctx.sharedService.selectedOpening.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-error\");\n      i0.ɵɵtext(25, \"Job title is Mandatory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-hint\", 15);\n      i0.ɵɵelementStart(27, \"strong\");\n      i0.ɵɵtext(28, \"Job Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"mat-hint\", 16);\n      i0.ɵɵtext(30);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(32, \"mat-form-field\");\n      i0.ɵɵelementStart(33, \"mat-label\", 12);\n      i0.ɵɵelementStart(34, \"b\");\n      i0.ɵɵtext(35, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"mat-select\", 17, 18);\n      i0.ɵɵlistener(\"ngmodelChange\", function Comp2Component_Template_mat_select_ngmodelChange_36_listener($event) {\n        return ctx.sharedService.selectedOpening.name = $event;\n      });\n      i0.ɵɵelementStart(38, \"mat-option\");\n      i0.ɵɵtext(39, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(40, Comp2Component_ng_container_40_Template, 3, 2, \"ng-container\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"mat-error\");\n      i0.ɵɵtext(42, \"Location is Mandatory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"mat-hint\", 15);\n      i0.ɵɵelementStart(44, \"strong\");\n      i0.ɵɵtext(45, \"Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(46, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(47, \"mat-form-field\");\n      i0.ɵɵelementStart(48, \"mat-label\", 12);\n      i0.ɵɵelementStart(49, \"b\");\n      i0.ɵɵtext(50, \"Employement type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"mat-select\", 20, 18);\n      i0.ɵɵlistener(\"ngmodelChange\", function Comp2Component_Template_mat_select_ngmodelChange_51_listener($event) {\n        return ctx.sharedService.selectedOpening.name = $event;\n      });\n      i0.ɵɵelementStart(53, \"mat-option\");\n      i0.ɵɵtext(54, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(55, Comp2Component_ng_container_55_Template, 3, 2, \"ng-container\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"mat-error\");\n      i0.ɵɵtext(57, \"Employement Type is Mandatory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"mat-grid-tile\");\n      i0.ɵɵelementStart(59, \"div\", 9);\n      i0.ɵɵelementStart(60, \"mat-form-field\");\n      i0.ɵɵelementStart(61, \"mat-label\", 12);\n      i0.ɵɵelementStart(62, \"b\");\n      i0.ɵɵtext(63, \"Eligibility:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"input\", 21, 18);\n      i0.ɵɵlistener(\"ngmodelChange\", function Comp2Component_Template_input_ngmodelChange_64_listener($event) {\n        return ctx.sharedService.selectedOpening.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"mat-hint\", 15);\n      i0.ɵɵelementStart(67, \"strong\");\n      i0.ɵɵtext(68, \"Eligibility\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"mat-error\");\n      i0.ɵɵtext(70, \"required field\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(71, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(72, \"mat-form-field\");\n      i0.ɵɵelementStart(73, \"mat-label\", 12);\n      i0.ɵɵelementStart(74, \"b\");\n      i0.ɵɵtext(75, \"Work will include:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(76, \"input\", 22, 18);\n      i0.ɵɵlistener(\"ngmodelChange\", function Comp2Component_Template_input_ngmodelChange_76_listener($event) {\n        return ctx.sharedService.selectedOpening.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(78, \"mat-hint\", 15);\n      i0.ɵɵelementStart(79, \"strong\");\n      i0.ɵɵtext(80, \"Work will include\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(81, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(82, \"mat-form-field\");\n      i0.ɵɵelementStart(83, \"mat-label\", 12);\n      i0.ɵɵelementStart(84, \"b\");\n      i0.ɵɵtext(85, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(86, \"input\", 23, 18);\n      i0.ɵɵlistener(\"ngmodelChange\", function Comp2Component_Template_input_ngmodelChange_86_listener($event) {\n        return ctx.sharedService.selectedOpening.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(88, \"mat-hint\", 15);\n      i0.ɵɵelementStart(89, \"strong\");\n      i0.ɵɵtext(90, \"Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(91, \"mat-grid-tile\");\n      i0.ɵɵelementStart(92, \"mat-form-field\", 24);\n      i0.ɵɵelementStart(93, \"mat-label\", 12);\n      i0.ɵɵelementStart(94, \"b\");\n      i0.ɵɵtext(95, \"Skills:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(96, \"mat-chip-list\", 25, 26);\n      i0.ɵɵtemplate(98, Comp2Component_mat_chip_98_Template, 3, 4, \"mat-chip\", 27);\n      i0.ɵɵelementStart(99, \"input\", 28, 29);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function Comp2Component_Template_input_matChipInputTokenEnd_99_listener($event) {\n        return ctx.add($event);\n      })(\"ngmodelChange\", function Comp2Component_Template_input_ngmodelChange_99_listener($event) {\n        return ctx.sharedService.selectedOpening.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(102, \"mat-autocomplete\", 30, 31);\n      i0.ɵɵlistener(\"optionSelected\", function Comp2Component_Template_mat_autocomplete_optionSelected_102_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(104, Comp2Component_mat_option_104_Template, 2, 2, \"mat-option\", 32);\n      i0.ɵɵpipe(105, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(106, \"mat-hint\", 15);\n      i0.ɵɵelementStart(107, \"strong\");\n      i0.ɵɵtext(108, \"Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(109, \"mat-grid-tile\");\n      i0.ɵɵelementStart(110, \"div\", 33);\n      i0.ɵɵelementStart(111, \"button\", 34);\n      i0.ɵɵtext(112, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(113, \" \\u00A0 \\u00A0 \\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(114, \"button\", 35);\n      i0.ɵɵlistener(\"click\", function Comp2Component_Template_button_click_114_listener() {\n        return ctx.onReset();\n      });\n      i0.ɵɵtext(115, \" Reset \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(22);\n\n      const _r11 = i0.ɵɵreference(97);\n\n      const _r15 = i0.ɵɵreference(103);\n\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.service.form);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngmodel\", ctx.sharedService.selectedOpening._id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"gutterSize\", \"5px\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formControl\", ctx.title)(\"ngmodel\", ctx.sharedService.selectedOpening.name);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\"\", _r2.value.length, \" / 50\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.loc)(\"ngmodel\", ctx.sharedService.selectedOpening.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Locations);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formControl\", ctx.Etype)(\"ngmodel\", ctx.sharedService.selectedOpening.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.EmpTypes);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formControl\", ctx.eligibility)(\"ngmodel\", ctx.sharedService.selectedOpening.name);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngmodel\", ctx.sharedService.selectedOpening.name);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngmodel\", ctx.sharedService.selectedOpening.name);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.fruitCtrl)(\"matAutocomplete\", _r15)(\"matChipInputFor\", _r11)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"ngmodel\", ctx.sharedService.selectedOpening.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(105, 23, ctx.filteredFruits));\n    }\n  },\n  directives: [i3.MatToolbar, i4.MatIcon, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatGridList, i6.MatGridTile, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i7.MatFormField, i7.MatLabel, i8.MatInput, i5.MaxLengthValidator, i5.RequiredValidator, i5.FormControlDirective, i7.MatError, i7.MatHint, i9.MatSelect, i10.MatOption, i11.NgForOf, i12.MatChipList, i13.MatAutocompleteTrigger, i12.MatChipInput, i13.MatAutocomplete, i12.MatChip, i11.NgIf, i12.MatChipRemove],\n  pipes: [i11.AsyncPipe],\n  styles: [\".example-spacer[_ngcontent-%COMP%] {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.normal-form[_ngcontent-%COMP%] {\\r\\n  margin-top: 0px;\\r\\n}\\r\\n\\r\\n.controles-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 5%;\\r\\n  \\r\\n}\\r\\n\\r\\n.controles-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.btn1[_ngcontent-%COMP%] {\\r\\n  width: 200px;\\r\\n  height: 40px;\\r\\n  border-radius: 10px;\\r\\n  background-color: yellow;\\r\\n  border-color: black;\\r\\n}\\r\\n\\r\\n.btn2[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 35px;\\r\\n  width: 200px;\\r\\n  height: 40px;\\r\\n  border-radius: 10px;\\r\\n  background-color: yellow;\\r\\n  border-color: black;\\r\\n}\\r\\n\\r\\n.skills[_ngcontent-%COMP%] {\\r\\n  right: 320px;\\r\\n  width: 280px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXAyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxXQUFXO0VBQ1gsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsd0JBQXdCO0VBQ3hCLG1CQUFtQjtBQUNyQjs7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix3QkFBd0I7RUFDeEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7QUFDZCIsImZpbGUiOiJjb21wMi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtc3BhY2VyIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxuLm5vcm1hbC1mb3JtIHtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbn1cclxuXHJcbi5jb250cm9sZXMtY29udGFpbmVyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiA1JTtcclxuICAvKm1hcmdpbi1ib3R0b206IDBweDsqL1xyXG59XHJcblxyXG4uY29udHJvbGVzLWNvbnRhaW5lciA+ICoge1xyXG4gIHdpZHRoOiAyNSU7XHJcbn1cclxuXHJcbi5idG4xIHtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xyXG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbn1cclxuLmJ0bjIge1xyXG4gIG1hcmdpbi1ib3R0b206IDM1cHg7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uc2tpbGxzIHtcclxuICByaWdodDogMzIwcHg7XHJcbiAgd2lkdGg6IDI4MHB4O1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\surendra\\Desktop\\Project\\Angularapp\\src\\app\\comp2\\comp2.component.ts","C:\\Users\\surendra\\Desktop\\Project\\Angularapp\\src\\app\\comp2\\comp2.component.html"],"names":[],"mappings":"AACA,SAAQ,aAAR,QAA4B,mBAA5B;AACA,SAAmB,WAAnB,EAA+B,UAA/B,QAAgD,gBAAhD;AAGA,SAAQ,KAAR,EAAe,KAAf,QAA2B,uBAA3B;AAKA,SAAQ,GAAR,EAAa,SAAb,QAA6B,gBAA7B;;;;;;;;;;;;;;;;;;;;ACkDY,IAAA,EAAA,CAAA,uBAAA,CAAA,CAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AAAsC,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAEpC,IAAA,EAAA,CAAA,YAAA;AACJ,IAAA,EAAA,CAAA,qBAAA;;;;;AAHc,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,OAAA,EAAA,YAAA,CAAA,EAAA;AAA0B,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,YAAA,CAAA,KAAA;;;;;;AAuBxC,IAAA,EAAA,CAAA,uBAAA,CAAA,CAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AAAkC,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAgB,IAAA,EAAA,CAAA,YAAA;AACpD,IAAA,EAAA,CAAA,qBAAA;;;;;AADc,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA;AAAsB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,KAAA;;;;;;AAmEpC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA;AAA0C,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA;AAAM,IAAA,EAAA,CAAA,YAAA;;;;;;;;AAPlD,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA;AAIE,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,+DAAA,GAAA;AAAA,YAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA;AAAA,YAAA,SAAA,GAAA,WAAA,CAAA,SAAA;AAAA,YAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA;AAAA,aAAA,OAAA,CAAA,MAAA,CAAA,SAAA,CAAA;AAAA,KAAA;AAEA,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,EAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;;AANE,IAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA,CAAA,UAAA,EAAyB,WAAzB,EAAyB,OAAA,CAAA,SAAzB;AAIA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,SAAA,EAAA,GAAA;AACyB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA,CAAA,SAAA;;;;;;AAiB3B,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AAIE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;AAHE,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA;AAEA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,SAAA,EAAA,GAAA;;;;AD1JZ,OAAM,MAAO,cAAP,CAAqB;AAczB,EAAA,WAAA,CAAmB,OAAnB,EACQ,SADR,EAC+C;AAD5B,SAAA,OAAA,GAAA,OAAA;AACX,SAAA,SAAA,GAAA,SAAA;AAbR,SAAA,OAAA,GAAU,IAAV;AACA,SAAA,UAAA,GAAa,IAAb;AACA,SAAA,SAAA,GAAY,IAAZ;AACA,SAAA,kBAAA,GAA+B,CAAC,KAAD,EAAQ,KAAR,CAA/B;AACA,SAAA,SAAA,GAAY,IAAI,WAAJ,EAAZ;AAEA,SAAA,MAAA,GAAmB,EAAnB;AACA,SAAA,SAAA,GAAsB,CAAC,YAAD,EAAe,QAAf,EAAyB,WAAzB,EAAsC,YAAtC,EAAoD,iBAApD,CAAtB;AAaA,SAAA,WAAA,GAAc,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,UAAU,CAAC,QAAZ,CAApB,CAAd;AACA,SAAA,KAAA,GAAQ,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,UAAU,CAAC,QAAZ,CAApB,CAAR;AACA,SAAA,GAAA,GAAO,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,UAAU,CAAC,QAAZ,CAApB,CAAP;AACA,SAAA,KAAA,GAAQ,IAAI,WAAJ,CAAgB,EAAhB,EAAmB,CAAC,UAAU,CAAC,QAAZ,CAAnB,CAAR;AAEA,SAAA,SAAA,GAAU,CACJ;AAAC,MAAA,EAAE,EAAE,CAAL;AAAQ,MAAA,KAAK,EAAE;AAAf,KADI,EAEJ;AAAC,MAAA,EAAE,EAAE,CAAL;AAAQ,MAAA,KAAK,EAAE;AAAf,KAFI,EAGJ;AAAC,MAAA,EAAE,EAAE,CAAL;AAAQ,MAAA,KAAK,EAAE;AAAf,KAHI,CAAV;AAMA,SAAA,QAAA,GAAS,CACP;AAAC,MAAA,EAAE,EAAE,CAAL;AAAQ,MAAA,KAAK,EAAE;AAAf,KADO,EAEP;AAAC,MAAA,EAAE,EAAE,CAAL;AAAQ,MAAA,KAAK,EAAE;AAAf,KAFO,EAGP;AAAC,MAAA,EAAE,EAAE,CAAL;AAAQ,MAAA,KAAK,EAAE;AAAf,KAHO,CAAT;AAhBI,SAAK,cAAL,GAAsB,KAAK,SAAL,CAAe,YAAf,CAA4B,IAA5B,CAClB,SAAS,CAAC,IAAD,CADS,EAElB,GAAG,CAAE,KAAD,IAA0B,KAAK,GAAG,KAAK,OAAL,CAAa,KAAb,CAAH,GAAyB,KAAK,SAAL,CAAe,KAAf,EAAzD,CAFe,CAAtB;AAGH;;AAoBD,EAAA,OAAO,GAAA;AACL,SAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;AACA,SAAK,OAAL,CAAa,mBAAb;AACA,SAAK,SAAL,CAAe,KAAf;AACD;;AAED,EAAA,OAAO,GAAA;AACL,SAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;AACA,SAAK,OAAL,CAAa,mBAAb,GAFK,CAGL;AACD;;AAGD,EAAA,QAAQ,GAAA,CACP;;AACC,EAAA,GAAG,CAAC,KAAD,EAAyB;AAC1B,UAAM,KAAK,GAAG,CAAC,KAAK,CAAC,KAAN,IAAe,EAAhB,EAAoB,IAApB,EAAd,CAD0B,CAG1B;;AACA,QAAI,KAAJ,EAAW;AACT,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACD,KANyB,CAQ1B;;;AACA,IAAA,KAAK,CAAC,SAAN,CAAiB,KAAjB;AAEA,SAAK,SAAL,CAAe,QAAf,CAAwB,IAAxB;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAc;AAClB,UAAM,KAAK,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,KAApB,CAAd;;AAEA,QAAI,KAAK,IAAI,CAAb,EAAgB;AACd,WAAK,MAAL,CAAY,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B;AACD;AACF;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAoC;AAC1C,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,CAAC,MAAN,CAAa,SAA9B;AACA,SAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B,GAAsC,EAAtC;AACA,SAAK,SAAL,CAAe,QAAf,CAAwB,IAAxB;AACD;;AAEO,EAAA,OAAO,CAAC,KAAD,EAAc;AAC3B,UAAM,WAAW,GAAG,KAAK,CAAC,WAAN,EAApB;AAEA,WAAO,KAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,IAAI,KAAK,CAAC,WAAN,GAAoB,OAApB,CAA4B,WAA5B,MAA6C,CAA5E,CAAP;AACD;;AAvFsB;;;mBAAd,c,EAAc,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,YAAA,C;AAAA,C;;;QAAd,c;AAAc,EAAA,SAAA,EAAA,CAAA,CAAA,WAAA,CAAA,C;AAAA,EAAA,SAAA,EAAA,SAAA,oBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;;mCAHd,CAAC,aAAD,C;AAAe,EAAA,KAAA,EAAA,G;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,UAAA,EAAA,IAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,EAAA,CAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,KAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,WAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,OAAA,EAAA,WAAA,EAAA,OAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,WAAA,EAAA,IAAA,EAAA,aAAA,EAAA,WAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,KAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,MAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,CAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,+BAAA,EAAA,SAAA,EAAA,sBAAA,EAAA,eAAA,CAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,MAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,eAAA,EAAA,EAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AChB5B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA;AAAM,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,iBAAA;AAAe,MAAA,EAAA,CAAA,YAAA;AACrB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAGE,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,+CAAA,GAAA;AAAA,eAAS,GAAA,CAAA,OAAA,EAAT;AAAkB,OAAlB;AAGA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA;AAAU,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,OAAA;AAAK,MAAA,EAAA,CAAA,YAAA;AACjB,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA;AAA2E,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,SAAA,gDAAA,GAAA;AAAA,eAAY,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAZ;AAA6B,OAA7B;AACzE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA;AAIE,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,GAAA,GAAA,MAAA;AAAA,OAAA;AAJF,MAAA,EAAA,CAAA,YAAA;AAMA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,eAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,eAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA,EAAA,EAAA;AACG,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAEpB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA;AAQE,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,GAAA,MAAA;AAAA,OAAA;AARF,MAAA,EAAA,CAAA,YAAA;AAUA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,wBAAA;AAAsB,MAAA,EAAA,CAAA,YAAA;AACjC,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA;AAAQ,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AACnD,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,EAAA;AAAsB,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA;AAA+B,MAAA,EAAA,CAAA,YAAA;AACvD,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,yEAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA,EAAA,EAAA;AACG,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAEnB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,YAAA,EAAA,EAAA,EAAA,EAAA;AAME,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,4DAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,GAAA,MAAA;AAAA,OAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,YAAA;AAAY,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAChB,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,EAAA;AAKF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,uBAAA;AAAqB,MAAA,EAAA,CAAA,YAAA;AAChC,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA;AAAQ,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,UAAA;AAAQ,MAAA,EAAA,CAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AACpD,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,uFAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA,EAAA,EAAA;AACG,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,mBAAA;AAAiB,MAAA,EAAA,CAAA,YAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAE3B,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,YAAA,EAAA,EAAA,EAAA,EAAA;AAME,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,4DAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,GAAA,MAAA;AAAA,OAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,YAAA;AAAY,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAChB,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,EAAA;AAGF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,+BAAA;AAA6B,MAAA,EAAA,CAAA,YAAA;AAC1C,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,eAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA,EAAA,EAAA;AACG,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA;AAAY,MAAA,EAAA,CAAA,YAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAEtB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA;AAME,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,GAAA,MAAA;AAAA,OAAA;AANF,MAAA,EAAA,CAAA,YAAA;AAQA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA;AAAQ,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA;AAAW,MAAA,EAAA,CAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AACrD,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gBAAA;AAAc,MAAA,EAAA,CAAA,YAAA;AAC3B,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,yEAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA,EAAA,EAAA;AACG,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,oBAAA;AAAkB,MAAA,EAAA,CAAA,YAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAE5B,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA;AAGE,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,GAAA,MAAA;AAAA,OAAA;AAHF,MAAA,EAAA,CAAA,YAAA;AAMA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA;AAAQ,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,mBAAA;AAAiB,MAAA,EAAA,CAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AAC7D,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,uFAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA,EAAA,EAAA;AACG,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA;AAAK,MAAA,EAAA,CAAA,YAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAEf,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA;AAGE,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,GAAA,MAAA;AAAA,OAAA;AAHF,MAAA,EAAA,CAAA,YAAA;AAMA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA;AAAQ,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AAChD,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,eAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA,EAAA,EAAA;AACG,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,SAAA;AAAO,MAAA,EAAA,CAAA,YAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAEjB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,eAAA,EAAA,EAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,EAAA;AASA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA;AAME,MAAA,EAAA,CAAA,UAAA,CAAA,sBAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA;AAAA,eAAwB,GAAA,CAAA,GAAA,CAAA,MAAA,CAAxB;AAAmC,OAAnC,EAAoC,eAApC,EAAoC,SAAA,uDAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,GAAA,MAAA;AAAA,OAApC;AANF,MAAA,EAAA,CAAA,YAAA;AAUF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,GAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,EAAA;AAEE,MAAA,EAAA,CAAA,UAAA,CAAA,gBAAA,EAAA,SAAA,oEAAA,CAAA,MAAA,EAAA;AAAA,eAAkB,GAAA,CAAA,QAAA,CAAA,MAAA,CAAlB;AAAkC,OAAlC;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,GAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,EAAA;;AAMF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,GAAA,EAAA,UAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,cAAA,CAAA,GAAA,EAAA,QAAA;AAAQ,MAAA,EAAA,CAAA,MAAA,CAAA,GAAA,EAAA,QAAA;AAAM,MAAA,EAAA,CAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AAClD,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,GAAA,EAAA,eAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,GAAA,EAAA,KAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,GAAA,EAAA,QAAA,EAAA,EAAA;AAAuD,MAAA,EAAA,CAAA,MAAA,CAAA,GAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAC3D,MAAA,EAAA,CAAA,MAAA,CAAA,GAAA,EAAA,8BAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,GAAA,EAAA,QAAA,EAAA,EAAA;AAAuC,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,iDAAA,GAAA;AAAA,eAAS,GAAA,CAAA,OAAA,EAAT;AAAkB,OAAlB;AACrC,MAAA,EAAA,CAAA,MAAA,CAAA,GAAA,EAAA,SAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;;;;;;;;;;AA7K4B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,OAAA,CAAA,IAAA;AAKxB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,GAAA;AAEwC,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,KAAA;AAahC,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,KAAA,EAAqB,SAArB,EAAqB,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAArB;AAOoB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,GAAA,CAAA,KAAA,CAAA,MAAA,EAAA,OAAA;AAUpB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,EAAmB,SAAnB,EAAmB,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAnB;AAMmC,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,SAAA;AAkBnC,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,KAAA,EAAqB,SAArB,EAAqB,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAArB;AAM+B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,QAAA;AAiB/B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,WAAA,EAA2B,SAA3B,EAA2B,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAA3B;AAgBA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA;AAcA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA;AAekB,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,MAAA;AAUlB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,SAAA,EAAyB,iBAAzB,EAAyB,IAAzB,EAAyB,iBAAzB,EAAyB,IAAzB,EAAyB,+BAAzB,EAAyB,GAAA,CAAA,kBAAzB,EAAyB,SAAzB,EAAyB,GAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAzB;AAckB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,cAAA,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {SharedService} from '../shared.service';\nimport {FormGroup, FormControl,Validators} from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ElementRef, ViewChild} from '@angular/core';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-comp2',\n  templateUrl: './comp2.component.html',\n  styleUrls: ['./comp2.component.css'],\n  providers: [SharedService]\n})\n\nexport class Comp2Component implements OnInit {\n  \n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  fruitCtrl = new FormControl();\n  filteredFruits: Observable<string[]>;\n  fruits: string[] = [];\n  allFruits: string[] = ['JavaScript', 'NodeJs', 'AngularJs', 'MEAN Stack', 'Data Structures'];\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(public service: SharedService,\n   public dialogRef: MatDialogRef<Comp2Component>) { \n  \n      this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\n          startWith(null),\n          map((fruit: string | null) => fruit ? this._filter(fruit) : this.allFruits.slice()));\n  }\n\n  eligibility = new FormControl('', [Validators.required]);\n  title = new FormControl('', [Validators.required]);\n  loc =  new FormControl('', [Validators.required]);\n  Etype = new FormControl('',[Validators.required])\n\n  Locations=[\n        {id: 1, value: 'Mumbai'},\n        {id: 2, value: 'Pune'},\n        {id: 3, value: 'Bangalure'}\n  ];\n\n  EmpTypes=[\n    {id: 1, value: 'Full Time'},\n    {id: 2, value: 'Part Time'},\n    {id: 3, value: 'Trainee'}\n  ];\n\n     \n  onClose() {\n    this.service.form.reset();\n    this.service.initializeFormGroup();\n    this.dialogRef.close();\n  }\n\n  onReset() {\n    this.service.form.reset();\n    this.service.initializeFormGroup();\n    //this.notificationService.success(':: Submitted successfully');\n  }\n\n\n  ngOnInit(): void {\n  }\n    add(event: MatChipInputEvent): void {\n      const value = (event.value || '').trim();\n\n      // Add our fruit\n      if (value) {\n        this.fruits.push(value);\n      }\n\n      // Clear the input value\n      event.chipInput!.clear();\n\n      this.fruitCtrl.setValue(null);\n    }\n\n    remove(fruit: string): void {\n      const index = this.fruits.indexOf(fruit);\n\n      if (index >= 0) {\n        this.fruits.splice(index, 1);\n      }\n    }\n\n    selected(event: MatAutocompleteSelectedEvent): void {\n      this.fruits.push(event.option.viewValue);\n      this.fruitInput.nativeElement.value = '';\n      this.fruitCtrl.setValue(null);\n    }\n\n    private _filter(value: string): string[] {\n      const filterValue = value.toLowerCase();\n\n      return this.allFruits.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n    }\n}\n\n\n","<div class=\"container\">\r\n  <mat-toolbar class=\"tool1\">\r\n    <span>Add new opening</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button\r\n      class=\"btn-dialog-close\"\r\n      mat-stroked-button\r\n      (click)=\"onClose()\"\r\n      tabIndex=\"-1\"\r\n    >\r\n      <mat-icon>clear</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n</div>\r\n\r\n<br />\r\n\r\n<form #openingForm=\"ngForm\" [formGroup]=\"service.form\" class=\"normal-form\" (ngsubmit)=\"onSubmit(opening)\">\r\n  <input\r\n    type=\"hidden\"\r\n    name=\"_id\"\r\n    #_id=\"ngModel\"\r\n    [(ngmodel)]=\"sharedService.selectedOpening._id\"\r\n  />\r\n  <mat-grid-list cols=\"1\" rowHeight=\"100px\" [gutterSize]=\"'5px'\">\r\n    <mat-grid-tile>\r\n      <div class=\"controles-container\">\r\n        <input type=\"hidden\" formControlName=\"$key\" />\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Job Title:</b></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            #message\r\n            maxlength=\"50\"\r\n            placeholder=\"Job Title\"\r\n            [formControl]=\"title\"\r\n            required\r\n            #name=\"ngModel\"\r\n            [(ngmodel)]=\"sharedService.selectedOpening.name\"\r\n          />\r\n          <mat-error>Job title is Mandatory</mat-error>\r\n          <mat-hint align=\"start\"><strong>Job Title</strong> </mat-hint>\r\n          <mat-hint align=\"end\">{{ message.value.length }} / 50</mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Location:</b></mat-label\r\n          >\r\n          <mat-select\r\n            formControlName=\"Location\"\r\n            placeholder=\"Location\"\r\n            [formControl]=\"loc\"\r\n            required\r\n            #name=\"ngModel\"\r\n            [(ngmodel)]=\"sharedService.selectedOpening.name\"\r\n          >\r\n            <mat-option>None</mat-option>\r\n            <ng-container *ngFor=\"let Location of Locations\">\r\n              <mat-option value=\"{{ Location.id }}\">{{\r\n                Location.value\r\n              }}</mat-option>\r\n            </ng-container>\r\n          </mat-select>\r\n          <mat-error>Location is Mandatory</mat-error>\r\n          <mat-hint align=\"start\"><strong>Location</strong> </mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Employement type:</b></mat-label\r\n          >\r\n          <mat-select\r\n            formControlName=\"EmployementType\"\r\n            placeholder=\"Employement type\"\r\n            [formControl]=\"Etype\"\r\n            required\r\n            #name=\"ngModel\"\r\n            [(ngmodel)]=\"sharedService.selectedOpening.name\"\r\n          >\r\n            <mat-option>None</mat-option>\r\n            <ng-container *ngFor=\"let type of EmpTypes\">\r\n              <mat-option value=\"{{ type.id }}\">{{ type.value }}</mat-option>\r\n            </ng-container>\r\n          </mat-select>\r\n          <mat-error>Employement Type is Mandatory</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <div class=\"controles-container\">\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Eligibility:</b></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            placeholder=\"Eligibility\"\r\n            [formControl]=\"eligibility\"\r\n            required\r\n            #name=\"ngModel\"\r\n            [(ngmodel)]=\"sharedService.selectedOpening.name\"\r\n          />\r\n          <mat-hint align=\"start\"><strong>Eligibility</strong> </mat-hint>\r\n          <mat-error>required field</mat-error>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Work will include:</b></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            #name=\"ngModel\"\r\n            [(ngmodel)]=\"sharedService.selectedOpening.name\"\r\n            placeholder=\"Work will include\"\r\n          />\r\n          <mat-hint align=\"start\"><strong>Work will include</strong> </mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Note:</b></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            #name=\"ngModel\"\r\n            [(ngmodel)]=\"sharedService.selectedOpening.name\"\r\n            placeholder=\"Note\"\r\n          />\r\n          <mat-hint align=\"start\"><strong>Note</strong> </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile>\r\n      <mat-form-field class=\"skills\">\r\n        <mat-label style=\"color: black; font-size: large\"\r\n          ><b>Skills:</b></mat-label\r\n        >\r\n        <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n          <mat-chip\r\n            *ngFor=\"let fruit of fruits\"\r\n            [selectable]=\"selectable\"\r\n            [removable]=\"removable\"\r\n            (removed)=\"remove(fruit)\"\r\n          >\r\n            {{ fruit }}\r\n            <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n          </mat-chip>\r\n          <input\r\n            #fruitInput\r\n            [formControl]=\"fruitCtrl\"\r\n            [matAutocomplete]=\"auto\"\r\n            [matChipInputFor]=\"chipList\"\r\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n            (matChipInputTokenEnd)=\"add($event)\"\r\n            #name=\"ngModel\"\r\n            [(ngmodel)]=\"sharedService.selectedOpening.name\"\r\n          />\r\n        </mat-chip-list>\r\n        <mat-autocomplete\r\n          #auto=\"matAutocomplete\"\r\n          (optionSelected)=\"selected($event)\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let fruit of filteredFruits | async\"\r\n            [value]=\"fruit\"\r\n          >\r\n            {{ fruit }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <mat-hint align=\"start\"><strong>Skills</strong> </mat-hint>\r\n      </mat-form-field>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile>\r\n      <div class=\"button-row\">\r\n        <button class=\"btn1\" mat-raised-button color=\"primary\">Save</button>\r\n        &nbsp; &nbsp; &nbsp;&nbsp;\r\n        <button class=\"btn2\" mat-raised-button (click)=\"onReset()\">\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</form>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}