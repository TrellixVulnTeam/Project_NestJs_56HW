{"ast":null,"code":"import { SharedService } from '../shared.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared.service\";\nimport * as i2 from \"../shared/notification.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/grid-list\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"@angular/material/chips\";\nimport * as i15 from \"@angular/material/autocomplete\";\nimport * as i16 from \"../shared/opening.model\";\nconst _c0 = [\"skillInput\"];\nconst _c1 = [\"auto\"];\n\nfunction addOpeningComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Job title is Mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction addOpeningComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Only Alpha Numericals are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction addOpeningComponent_ng_container_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-option\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const Location_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", Location_r14.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(Location_r14.value);\n  }\n}\n\nfunction addOpeningComponent_ng_container_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-option\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const type_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", type_r15.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r15.value);\n  }\n}\n\nfunction addOpeningComponent_mat_error_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field is Mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction addOpeningComponent_mat_error_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Only Alpha Numericals are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction addOpeningComponent_mat_error_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Only Alpha Numericals are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction addOpeningComponent_mat_error_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Only Alpha Numericals are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction addOpeningComponent_mat_chip_91_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 36);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction addOpeningComponent_mat_chip_91_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 34);\n    i0.ɵɵlistener(\"removed\", function addOpeningComponent_mat_chip_91_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const skill_r16 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.remove(skill_r16);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, addOpeningComponent_mat_chip_91_mat_icon_2_Template, 2, 0, \"mat-icon\", 35);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const skill_r16 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectable\", ctx_r10.selectable)(\"removable\", ctx_r10.removable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", skill_r16, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.removable);\n  }\n}\n\nfunction addOpeningComponent_mat_option_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const skill_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", skill_r20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", skill_r20, \" \");\n  }\n}\n\nexport class addOpeningComponent {\n  constructor(service, notificationService, dialogRef, data) {\n    this.service = service;\n    this.notificationService = notificationService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.validPattern = /^[a-zA-Z0-9_!@#$%^&*()-/| ]*$/;\n    this.openingForm = new FormGroup({\n      _id: new FormControl(''),\n      title: new FormControl('', [Validators.required, Validators.pattern(this.validPattern)]),\n      loc: new FormControl(0, [Validators.required]),\n      Etype: new FormControl(0, [Validators.required]),\n      eligibility: new FormControl('', [Validators.required, Validators.pattern(this.validPattern)]),\n      work: new FormControl('', [Validators.pattern(this.validPattern)]),\n      note: new FormControl('', [Validators.pattern(this.validPattern)]),\n      skills: new FormControl([])\n    });\n    this.visible = true;\n    this.selectable = true;\n    this.removable = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.skillCtrl = new FormControl();\n    this.selectedSkills = [];\n    this.allSkills = ['JavaScript', 'NodeJs', 'AngularJs', 'MEAN Stack', 'Data Structures'];\n    this.Locations = [{\n      id: 1,\n      value: 'Mumbai'\n    }, {\n      id: 2,\n      value: 'Pune'\n    }, {\n      id: 3,\n      value: 'Bangalore'\n    }];\n    this.EmpTypes = [{\n      id: 1,\n      value: 'Full Time'\n    }, {\n      id: 2,\n      value: 'Part Time'\n    }, {\n      id: 3,\n      value: 'Trainee'\n    }];\n    this.openings = [];\n    this.filteredSkills = this.skillCtrl.valueChanges.pipe(startWith(null), map(skill => skill ? this._filter(skill) : this.allSkills.slice()));\n  }\n\n  ngOnInit() {\n    this._id = this.data._id;\n    this.jobtitle = this.data.jobtitle;\n\n    for (let i = 0; i < this.Locations.length; i++) {\n      if (this.Locations[i].value == this.data.location) {\n        this.location = this.Locations[i].id.toString();\n        break;\n      }\n    }\n\n    for (let j = 0; j < this.EmpTypes.length; j++) {\n      if (this.Locations[j].value == this.data.location) {\n        this.EmployementType = this.EmpTypes[j].id.toString();\n        break;\n      }\n    }\n\n    this.Eligibility = this.data.Eligibility;\n    this.Work = this.data.Work;\n    this.Note = this.data.Note;\n    this.selectedSkills = this.data.skills;\n  }\n\n  initializeFormGroup() {\n    this.openingForm.setValue({\n      title: '',\n      loc: 0,\n      EType: 0,\n      eligibility: '',\n      work: '',\n      note: '',\n      skills: ['']\n    });\n  }\n\n  onClose() {\n    //this.initializeFormGroup();\n    this.dialogRef.close();\n  }\n\n  onReset() {\n    this.openingForm.reset();\n    this.selectedSkills = []; //this.initializeFormGroup();\n  }\n\n  add(event) {\n    const value = (event.value || '').trim();\n    const input = event.input; //const value = event.value;\n    // Add our skill\n\n    if ((value || '').trim()) {\n      /*\r\n      if(!this.selectedSkills.includes(value.trim())){\r\n          this.selectedSkills.push(value.trim());\r\n      }*/\n      let index = this.selectedSkills.indexOf(value.trim());\n\n      if (index == -1) {\n        this.selectedSkills.push(value.trim());\n      }\n    } // Add our fruit\n\n    /* if ((value || '').trim()) {\r\n       if(!this.fruits.includes(value.trim())) {\r\n         this.fruits.push(value.trim());\r\n       }\r\n     }*/\n    // Clear the input value\n\n\n    event.chipInput.clear(); // Reset the input value\n\n    if (input) {\n      input.value = '';\n    }\n\n    this.skillCtrl.setValue(null);\n  }\n\n  remove(skill) {\n    const index = this.selectedSkills.indexOf(skill);\n\n    if (index >= 0) {\n      this.selectedSkills.splice(index, 1);\n    }\n  }\n\n  selected(event) {\n    /*\r\n      this.selectedSkills.push(event.option.viewValue);\r\n      this.skillInput.nativeElement.value = '';\r\n      this.skillCtrl.setValue(null);*/\n    if (!this.selectedSkills.includes(event.option.viewValue)) {\n      this.selectedSkills.push(event.option.viewValue);\n    }\n\n    this.skillInput.nativeElement.value = '';\n    this.skillCtrl.setValue(null);\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allSkills.filter(skill => skill.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  addOpening() {\n    if (this.openingForm.valid) {\n      const newOpening = {\n        _id: this._id,\n        jobtitle: this.jobtitle,\n        location: this.Locations[parseInt(this.location) - 1].value,\n        EmployementType: this.EmpTypes[parseInt(this.EmployementType) - 1].value,\n        Eligibility: this.Eligibility,\n        Work: this.Work,\n        Note: this.Note,\n        skills: this.selectedSkills\n      };\n\n      if (newOpening._id == undefined) {\n        this.service.addOpening(newOpening).subscribe(opening => {\n          // this.openings;\n          this.notificationService.success(':: Submitted successfully');\n          this.onClose();\n        }, err => {\n          this.notificationService.warn('!Something went wrong');\n        });\n      } else {\n        this.service.updateOpening(newOpening).subscribe(() => {\n          this.notificationService.success(':: Updated successfully');\n          this.onClose();\n        }, err => {\n          this.notificationService.warn('!Something went wrong');\n        });\n      }\n    }\n  }\n\n}\n\naddOpeningComponent.ɵfac = function addOpeningComponent_Factory(t) {\n  return new (t || addOpeningComponent)(i0.ɵɵdirectiveInject(i1.SharedService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\n\naddOpeningComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: addOpeningComponent,\n  selectors: [[\"app-addOpening\"]],\n  viewQuery: function addOpeningComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.skillInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocomplete = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([SharedService])],\n  decls: 108,\n  vars: 29,\n  consts: [[1, \"container\"], [1, \"tool1\"], [1, \"fill-remaining-space\"], [\"mat-stroked-button\", \"\", \"tabIndex\", \"-1\", 1, \"btn-dialog-close\", 3, \"click\"], [3, \"formGroup\", \"submit\"], [\"type\", \"hidden\", \"formControlName\", \"_id\", 3, \"ngModel\", \"ngModelChange\"], [\"cols\", \"1\", \"rowHeight\", \"100px\", 3, \"gutterSize\"], [1, \"controles-container\"], [1, \"example-full-width\"], [2, \"color\", \"black\", \"font-size\", \"large\"], [\"matInput\", \"\", \"maxlength\", \"50\", \"placeholder\", \"Job Title\", \"formControlName\", \"title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"message\", \"\"], [4, \"ngIf\"], [\"align\", \"start\"], [\"align\", \"end\"], [\"placeholder\", \"Location\", \"formControlName\", \"loc\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Employement type\", \"formControlName\", \"Etype\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Eligibility\", \"formControlName\", \"eligibility\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"formControlName\", \"work\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Note\", \"formControlName\", \"note\", 3, \"ngModel\", \"ngModelChange\"], [1, \"skills\"], [\"aria-label\", \"Skill selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"skills\", 3, \"ngModel\", \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"ngModelChange\", \"matChipInputTokenEnd\"], [\"skillInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"button-row\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btn1\", 3, \"disabled\"], [\"mat-raised-button\", \"\", 1, \"btn2\", 3, \"click\"], [3, \"value\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"]],\n  template: function addOpeningComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-toolbar\", 1);\n      i0.ɵɵelementStart(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"span\", 2);\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function addOpeningComponent_Template_button_click_5_listener() {\n        return ctx.onClose();\n      });\n      i0.ɵɵelementStart(6, \"mat-icon\");\n      i0.ɵɵtext(7, \"clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function addOpeningComponent_Template_form_submit_9_listener() {\n        return ctx.addOpening();\n      });\n      i0.ɵɵelementStart(10, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx._id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-grid-list\", 6);\n      i0.ɵɵelementStart(12, \"mat-grid-tile\");\n      i0.ɵɵelementStart(13, \"div\", 7);\n      i0.ɵɵelementStart(14, \"mat-form-field\", 8);\n      i0.ɵɵelementStart(15, \"mat-label\", 9);\n      i0.ɵɵelementStart(16, \"b\");\n      i0.ɵɵtext(17, \"Job Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.jobtitle = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, addOpeningComponent_mat_error_20_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵtemplate(21, addOpeningComponent_mat_error_21_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵelementStart(22, \"mat-hint\", 13);\n      i0.ɵɵelementStart(23, \"strong\");\n      i0.ɵɵtext(24, \"Job Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"mat-hint\", 14);\n      i0.ɵɵtext(26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(28, \"mat-form-field\");\n      i0.ɵɵelementStart(29, \"mat-label\", 9);\n      i0.ɵɵelementStart(30, \"b\");\n      i0.ɵɵtext(31, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"mat-select\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_mat_select_ngModelChange_32_listener($event) {\n        return ctx.location = $event;\n      });\n      i0.ɵɵelementStart(33, \"mat-option\");\n      i0.ɵɵtext(34, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(35, addOpeningComponent_ng_container_35_Template, 3, 2, \"ng-container\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"mat-error\");\n      i0.ɵɵtext(37, \"Location is Mandatory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"mat-hint\", 13);\n      i0.ɵɵelementStart(39, \"strong\");\n      i0.ɵɵtext(40, \"Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(41, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(42, \"mat-form-field\");\n      i0.ɵɵelementStart(43, \"mat-label\", 9);\n      i0.ɵɵelementStart(44, \"b\");\n      i0.ɵɵtext(45, \"Employement type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"mat-select\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_mat_select_ngModelChange_46_listener($event) {\n        return ctx.EmployementType = $event;\n      });\n      i0.ɵɵelementStart(47, \"mat-option\");\n      i0.ɵɵtext(48, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(49, addOpeningComponent_ng_container_49_Template, 3, 2, \"ng-container\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"mat-error\");\n      i0.ɵɵtext(51, \"Employement Type is Mandatory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"mat-grid-tile\");\n      i0.ɵɵelementStart(53, \"div\", 7);\n      i0.ɵɵelementStart(54, \"mat-form-field\");\n      i0.ɵɵelementStart(55, \"mat-label\", 9);\n      i0.ɵɵelementStart(56, \"b\");\n      i0.ɵɵtext(57, \"Eligibility:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_input_ngModelChange_58_listener($event) {\n        return ctx.Eligibility = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"mat-hint\", 13);\n      i0.ɵɵelementStart(60, \"strong\");\n      i0.ɵɵtext(61, \"Eligibility\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(62, addOpeningComponent_mat_error_62_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵtemplate(63, addOpeningComponent_mat_error_63_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(64, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(65, \"mat-form-field\");\n      i0.ɵɵelementStart(66, \"mat-label\", 9);\n      i0.ɵɵelementStart(67, \"b\");\n      i0.ɵɵtext(68, \"Work will include:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_input_ngModelChange_69_listener($event) {\n        return ctx.Work = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"mat-hint\", 13);\n      i0.ɵɵelementStart(71, \"strong\");\n      i0.ɵɵtext(72, \"Work will include\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(73, addOpeningComponent_mat_error_73_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(74, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(75, \"mat-form-field\");\n      i0.ɵɵelementStart(76, \"mat-label\", 9);\n      i0.ɵɵelementStart(77, \"b\");\n      i0.ɵɵtext(78, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_input_ngModelChange_79_listener($event) {\n        return ctx.Note = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(80, \"mat-hint\", 13);\n      i0.ɵɵelementStart(81, \"strong\");\n      i0.ɵɵtext(82, \"Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(83, addOpeningComponent_mat_error_83_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(84, \"mat-grid-tile\");\n      i0.ɵɵelementStart(85, \"mat-form-field\", 21);\n      i0.ɵɵelementStart(86, \"mat-label\", 9);\n      i0.ɵɵelementStart(87, \"b\");\n      i0.ɵɵtext(88, \"Skills:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(89, \"mat-chip-list\", 22, 23);\n      i0.ɵɵtemplate(91, addOpeningComponent_mat_chip_91_Template, 3, 4, \"mat-chip\", 24);\n      i0.ɵɵelementStart(92, \"input\", 25, 26);\n      i0.ɵɵlistener(\"ngModelChange\", function addOpeningComponent_Template_input_ngModelChange_92_listener($event) {\n        return ctx.skills = $event;\n      })(\"matChipInputTokenEnd\", function addOpeningComponent_Template_input_matChipInputTokenEnd_92_listener($event) {\n        return ctx.add($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(94, \"mat-autocomplete\", 27, 28);\n      i0.ɵɵlistener(\"optionSelected\", function addOpeningComponent_Template_mat_autocomplete_optionSelected_94_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(96, addOpeningComponent_mat_option_96_Template, 2, 2, \"mat-option\", 29);\n      i0.ɵɵpipe(97, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(98, \"mat-hint\", 13);\n      i0.ɵɵelementStart(99, \"strong\");\n      i0.ɵɵtext(100, \"Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(101, \"mat-grid-tile\");\n      i0.ɵɵelementStart(102, \"div\", 30);\n      i0.ɵɵelementStart(103, \"button\", 31);\n      i0.ɵɵtext(104, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(105, \" \\u00A0 \\u00A0 \\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(106, \"button\", 32);\n      i0.ɵɵlistener(\"click\", function addOpeningComponent_Template_button_click_106_listener() {\n        return ctx.onReset();\n      });\n      i0.ɵɵtext(107, \" Reset \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(19);\n\n      const _r9 = i0.ɵɵreference(90);\n\n      const _r12 = i0.ɵɵreference(95);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.openingForm.controls[\"_id\"].value ? \"Modify opening\" : \"Add new Opening\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.openingForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx._id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"gutterSize\", \"5px\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.jobtitle);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.openingForm.controls[\"title\"].errors == null ? null : ctx.openingForm.controls[\"title\"].errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.openingForm.controls[\"title\"].errors == null ? null : ctx.openingForm.controls[\"title\"].errors.pattern);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"\", _r0.value.length, \" / 50\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.location);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Locations);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.EmployementType);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.EmpTypes);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.Eligibility);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.openingForm.controls[\"eligibility\"].errors == null ? null : ctx.openingForm.controls[\"eligibility\"].errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.openingForm.controls[\"eligibility\"].errors == null ? null : ctx.openingForm.controls[\"eligibility\"].errors.pattern);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.Work);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.openingForm.controls[\"work\"].errors == null ? null : ctx.openingForm.controls[\"work\"].errors.pattern);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.Note);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.openingForm.controls[\"note\"].errors == null ? null : ctx.openingForm.controls[\"note\"].errors.pattern);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectedSkills);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.skills)(\"formControl\", ctx.skillCtrl)(\"matAutocomplete\", _r12)(\"matChipInputFor\", _r9)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(97, 27, ctx.filteredSkills));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"disabled\", ctx.openingForm.invalid);\n    }\n  },\n  directives: [i4.MatToolbar, i5.MatButton, i6.MatIcon, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective, i7.DefaultValueAccessor, i7.NgControlStatus, i7.FormControlName, i8.MatGridList, i8.MatGridTile, i9.MatFormField, i9.MatLabel, i10.MatInput, i7.MaxLengthValidator, i7.RequiredValidator, i11.NgIf, i9.MatHint, i12.MatSelect, i13.MatOption, i11.NgForOf, i9.MatError, i14.MatChipList, i15.MatAutocompleteTrigger, i14.MatChipInput, i7.FormControlDirective, i15.MatAutocomplete, i14.MatChip, i14.MatChipRemove],\n  pipes: [i11.AsyncPipe],\n  styles: [\".example-spacer[_ngcontent-%COMP%] {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.normal-form[_ngcontent-%COMP%] {\\r\\n  margin-top: 0px;\\r\\n}\\r\\n\\r\\n.controles-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 5%;\\r\\n  \\r\\n}\\r\\n\\r\\n.controles-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.btn1[_ngcontent-%COMP%] {\\r\\n  width: 200px;\\r\\n  height: 40px;\\r\\n  border-radius: 15px;\\r\\n  background-color: yellow;\\r\\n  border-color: black;\\r\\n}\\r\\n\\r\\n.btn2[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 35px;\\r\\n  width: 200px;\\r\\n  height: 40px;\\r\\n  border-radius: 10px;\\r\\n  background-color: yellow;\\r\\n  border-color: black;\\r\\n}\\r\\n\\r\\n.skills[_ngcontent-%COMP%] {\\r\\n  right: 150px;\\r\\n  width: 650px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZE9wZW5pbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFdBQVc7RUFDWCxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix3QkFBd0I7RUFDeEIsbUJBQW1CO0FBQ3JCOztBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHdCQUF3QjtFQUN4QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkIiwiZmlsZSI6ImFkZE9wZW5pbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXNwYWNlciB7XHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbi5ub3JtYWwtZm9ybSB7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG59XHJcblxyXG4uY29udHJvbGVzLWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogNSU7XHJcbiAgLyptYXJnaW4tYm90dG9tOiAwcHg7Ki9cclxufVxyXG5cclxuLmNvbnRyb2xlcy1jb250YWluZXIgPiAqIHtcclxuICB3aWR0aDogMjUlO1xyXG59XHJcblxyXG4uYnRuMSB7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG59XHJcbi5idG4yIHtcclxuICBtYXJnaW4tYm90dG9tOiAzNXB4O1xyXG4gIHdpZHRoOiAyMDBweDtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XHJcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnNraWxscyB7XHJcbiAgcmlnaHQ6IDE1MHB4O1xyXG4gIHdpZHRoOiA2NTBweDtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\surendra\\Desktop\\Project_Nest\\angularapp\\src\\app\\addOpening\\addOpening.component.ts","C:\\Users\\surendra\\Desktop\\Project_Nest\\angularapp\\src\\app\\addOpening\\addOpening.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit,Inject } from '@angular/core';\nimport {SharedService} from '../shared.service';\nimport {FormGroup, FormControl,Validators} from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ElementRef, ViewChild} from '@angular/core';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {Opening} from '../shared/opening.model';\nimport { NotificationService } from '../shared/notification.service';\n\n@Component({\n  selector: 'app-addOpening',\n  templateUrl: './addOpening.component.html',\n  styleUrls: ['./addOpening.component.css'],\n  providers: [SharedService]\n})\n\nexport class addOpeningComponent implements OnInit {\n  \n  validPattern = /^[a-zA-Z0-9_!@#$%^&*()-/| ]*$/;\n  \n  \n  openingForm = new FormGroup({\n    _id  : new FormControl(''),\n    title: new FormControl('', [Validators.required,Validators.pattern(this.validPattern)]),\n    loc : new FormControl(0, [Validators.required]),\n    Etype: new FormControl(0,[Validators.required]),\n    eligibility: new FormControl('', [Validators.required,Validators.pattern(this.validPattern)]),\n    work: new FormControl('',[Validators.pattern(this.validPattern)]),\n    note: new FormControl('',[Validators.pattern(this.validPattern)]),\n    skills: new FormControl([])\n  });\n\n \n\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  skillCtrl = new FormControl();\n  filteredSkills: Observable<string[]>;\n  selectedSkills: string[] = [];\n  allSkills: string[] = ['JavaScript', 'NodeJs', 'AngularJs', 'MEAN Stack', 'Data Structures'];\n\n  @ViewChild('skillInput') skillInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(public service: SharedService,\n    public notificationService: NotificationService,\n    public dialogRef: MatDialogRef<addOpeningComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Opening) { \n\n      \n      this.filteredSkills = this.skillCtrl.valueChanges.pipe(\n          startWith(null),\n          map((skill: string | null) => skill ? this._filter(skill) : this.allSkills.slice()));\n  }\n\n  ngOnInit(){\n    \n        this._id = this.data._id;\n        this.jobtitle = this.data.jobtitle;\n        for(let i=0;i < this.Locations.length;i++){\n            if(this.Locations[i].value == this.data.location){\n                  this.location  = (this.Locations[i].id).toString();\n                  break; \n            }\n        }\n        for(let j=0;j < this.EmpTypes.length;j++){\n          if(this.Locations[j].value == this.data.location){\n                this.EmployementType  = (this.EmpTypes[j].id).toString();\n                break; \n          }\n        }\n        this.Eligibility = this.data.Eligibility;\n        this.Work = this.data.Work;\n        this.Note = this.data.Note;\n        this.selectedSkills = this.data.skills;\n  }\n   \n  Locations=[\n        {id: 1, value: 'Mumbai'},\n        {id: 2, value: 'Pune'},\n        {id: 3, value: 'Bangalore'}\n  ];\n\n  EmpTypes=[\n    {id: 1, value: 'Full Time'},\n    {id: 2, value: 'Part Time'},\n    {id: 3, value: 'Trainee'}\n  ];\n \n  \n  initializeFormGroup() {\n    this.openingForm.setValue({\n      title: '',\n      loc : 0,\n      EType: 0,\n      eligibility: '',\n      work: '',\n      note: '',\n      skills: ['']\n    });\n  }\n\n     \n  onClose() {\n    //this.initializeFormGroup();\n    this.dialogRef.close();\n  }\n\n  onReset() {\n    this.openingForm.reset();\n    this.selectedSkills=[];\n    //this.initializeFormGroup();\n  }\n\n  add(event: MatChipInputEvent): void {\n      const value = (event.value || '').trim();\n\n      const input = event.input;\n      //const value = event.value;\n   \n\n      // Add our skill\n      if ((value || '').trim()) {\n        /*\n        if(!this.selectedSkills.includes(value.trim())){\n            this.selectedSkills.push(value.trim());\n        }*/\n        let index =   this.selectedSkills.indexOf(value.trim())\n        if(index == -1){\n            this.selectedSkills.push(value.trim());\n        }\n      }\n\n      // Add our fruit\n     /* if ((value || '').trim()) {\n        if(!this.fruits.includes(value.trim())) {\n          this.fruits.push(value.trim());\n        }\n      }*/\n\n      // Clear the input value\n      event.chipInput!.clear();\n\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n\n\n      this.skillCtrl.setValue(null);\n  }\n\n  remove(skill: string): void {\n      const index = this.selectedSkills.indexOf(skill);\n\n      if (index >= 0) {\n        this.selectedSkills.splice(index, 1);\n      }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    /*\n      this.selectedSkills.push(event.option.viewValue);\n      this.skillInput.nativeElement.value = '';\n      this.skillCtrl.setValue(null);*/\n      if (!this.selectedSkills.includes(event.option.viewValue)) {\n         this.selectedSkills.push(event.option.viewValue);\n      }\n      this.skillInput.nativeElement.value = '';\n      this.skillCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n      const filterValue = value.toLowerCase();\n\n      return this.allSkills.filter(skill => skill.toLowerCase().indexOf(filterValue) === 0);\n  }\n    \n    openings: Opening[] = [];\n    opening : Opening;\n    \n    _id             : string;\n    jobtitle        : string;\n    location        : string;\n    EmployementType : string;\n    Eligibility     : string;\n    Work            : string;\n    Note            : string;\n    skills          : Array<string>;\n    \n\n  addOpening(){\n      \n      \n      if(this.openingForm.valid){  \n          \n            const newOpening = {\n              _id             : this._id,\n              jobtitle        : this.jobtitle,\n              location        : this.Locations[parseInt(this.location)-1].value,\n              EmployementType : this.EmpTypes[parseInt(this.EmployementType)-1].value,\n              Eligibility     : this.Eligibility,\n              Work            : this.Work,\n              Note            : this.Note,\n              skills          : this.selectedSkills\n            }\n\n          if(newOpening._id == undefined){\n               this.service.addOpening(newOpening)\n                   .subscribe((opening:any) => {\n                    // this.openings;\n                      this.notificationService.success(':: Submitted successfully');\n                      this.onClose();\n                  },(err)=>{\n                    this.notificationService.warn('!Something went wrong');\n                  });\n          }\n          \n          else{\n            \n               this.service.updateOpening(newOpening)\n                     .subscribe(()=>{\n                        this.notificationService.success(':: Updated successfully');\n                        this.onClose();\n                     },(err)=>{\n                      this.notificationService.warn('!Something went wrong');\n                    });\n          }\n           \n\n      }\n  } \n\n\n}\n\n\n","<div class=\"container\">\r\n  <mat-toolbar class=\"tool1\">\r\n    <span>{{\r\n      openingForm.controls[\"_id\"].value ? \"Modify opening\" : \"Add new Opening\"\r\n    }}</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button\r\n      class=\"btn-dialog-close\"\r\n      mat-stroked-button\r\n      (click)=\"onClose()\"\r\n      tabIndex=\"-1\"\r\n    >\r\n      <mat-icon>clear</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n</div>\r\n\r\n<br />\r\n\r\n<form [formGroup]=\"openingForm\" (submit)=\"addOpening()\">\r\n  <input type=\"hidden\" formControlName=\"_id\" [(ngModel)]=\"_id\" />\r\n  <mat-grid-list cols=\"1\" rowHeight=\"100px\" [gutterSize]=\"'5px'\">\r\n    <mat-grid-tile>\r\n      <div class=\"controles-container\">\r\n        <!--<input type=\"hidden\" formControlName=\"$key\" />-->\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Job Title:</b></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            #message\r\n            maxlength=\"50\"\r\n            [(ngModel)]=\"jobtitle\"\r\n            placeholder=\"Job Title\"\r\n            formControlName=\"title\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"openingForm.controls['title'].errors?.required\"\r\n            >Job title is Mandatory</mat-error\r\n          >\r\n          <mat-error *ngIf=\"openingForm.controls['title'].errors?.pattern\"\r\n            >Only Alpha Numericals are allowed</mat-error\r\n          >\r\n          <mat-hint align=\"start\"><strong>Job Title</strong> </mat-hint>\r\n          <mat-hint align=\"end\">{{ message.value.length }} / 50</mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Location:</b></mat-label\r\n          >\r\n          <mat-select\r\n            [(ngModel)]=\"location\"\r\n            placeholder=\"Location\"\r\n            formControlName=\"loc\"\r\n            required\r\n          >\r\n            <mat-option>None</mat-option>\r\n            <ng-container *ngFor=\"let Location of Locations\">\r\n              <mat-option value=\"{{ Location.id }}\">{{\r\n                Location.value\r\n              }}</mat-option>\r\n            </ng-container>\r\n          </mat-select>\r\n          <mat-error>Location is Mandatory</mat-error>\r\n          <mat-hint align=\"start\"><strong>Location</strong> </mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Employement type:</b></mat-label\r\n          >\r\n          <mat-select\r\n            [(ngModel)]=\"EmployementType\"\r\n            placeholder=\"Employement type\"\r\n            formControlName=\"Etype\"\r\n            required\r\n          >\r\n            <mat-option>None</mat-option>\r\n            <ng-container *ngFor=\"let type of EmpTypes\">\r\n              <mat-option value=\"{{ type.id }}\">{{ type.value }}</mat-option>\r\n            </ng-container>\r\n          </mat-select>\r\n          <mat-error>Employement Type is Mandatory</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <div class=\"controles-container\">\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Eligibility:</b></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"Eligibility\"\r\n            placeholder=\"Eligibility\"\r\n            formControlName=\"eligibility\"\r\n            required\r\n          />\r\n          <mat-hint align=\"start\"><strong>Eligibility</strong> </mat-hint>\r\n\r\n          <mat-error\r\n            *ngIf=\"openingForm.controls['eligibility'].errors?.required\"\r\n            >This field is Mandatory</mat-error\r\n          >\r\n          <mat-error *ngIf=\"openingForm.controls['eligibility'].errors?.pattern\"\r\n            >Only Alpha Numericals are allowed</mat-error\r\n          >\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Work will include:</b></mat-label\r\n          >\r\n          <input matInput [(ngModel)]=\"Work\" formControlName=\"work\" />\r\n          <mat-hint align=\"start\"><strong>Work will include</strong> </mat-hint>\r\n          <mat-error *ngIf=\"openingForm.controls['work'].errors?.pattern\"\r\n            >Only Alpha Numericals are allowed</mat-error\r\n          >\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Note:</b></mat-label\r\n          >\r\n          <input\r\n            matInput\r\n            [(ngModel)]=\"Note\"\r\n            placeholder=\"Note\"\r\n            formControlName=\"note\"\r\n          />\r\n          <mat-hint align=\"start\"><strong>Note</strong> </mat-hint>\r\n          <mat-error *ngIf=\"openingForm.controls['note'].errors?.pattern\"\r\n            >Only Alpha Numericals are allowed</mat-error\r\n          >\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile>\r\n      <mat-form-field class=\"skills\">\r\n        <mat-label style=\"color: black; font-size: large\"\r\n          ><b>Skills:</b></mat-label\r\n        >\r\n        <mat-chip-list #chipList aria-label=\"Skill selection\">\r\n          <mat-chip\r\n            *ngFor=\"let skill of selectedSkills\"\r\n            [selectable]=\"selectable\"\r\n            [removable]=\"removable\"\r\n            (removed)=\"remove(skill)\"\r\n          >\r\n            {{ skill }}\r\n            <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n          </mat-chip>\r\n          <input\r\n            #skillInput\r\n            [(ngModel)]=\"skills\"\r\n            formControlName=\"skills\"\r\n            [formControl]=\"skillCtrl\"\r\n            [matAutocomplete]=\"auto\"\r\n            [matChipInputFor]=\"chipList\"\r\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n            (matChipInputTokenEnd)=\"add($event)\"\r\n          />\r\n        </mat-chip-list>\r\n        <mat-autocomplete\r\n          #auto=\"matAutocomplete\"\r\n          (optionSelected)=\"selected($event)\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let skill of filteredSkills | async\"\r\n            [value]=\"skill\"\r\n          >\r\n            {{ skill }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <mat-hint align=\"start\"><strong>Skills</strong> </mat-hint>\r\n      </mat-form-field>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile>\r\n      <div class=\"button-row\">\r\n        <button\r\n          class=\"btn1\"\r\n          mat-raised-button\r\n          type=\"submit\"\r\n          [disabled]=\"openingForm.invalid\"\r\n        >\r\n          Save\r\n        </button>\r\n        &nbsp; &nbsp; &nbsp;&nbsp;\r\n        <button class=\"btn2\" mat-raised-button (click)=\"onReset()\">\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</form>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}