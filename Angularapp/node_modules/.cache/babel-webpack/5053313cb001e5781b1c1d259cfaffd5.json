{"ast":null,"code":"import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared.service\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/grid-list\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/chips\";\nconst _c0 = [\"fruitInput\"];\nconst _c1 = [\"auto\"];\n\nfunction Comp2Component_ng_container_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-option\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const Location_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", Location_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(Location_r8.value);\n  }\n}\n\nfunction Comp2Component_ng_container_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-option\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const type_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", type_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r9.value);\n  }\n}\n\nfunction Comp2Component_mat_chip_105_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 38);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Comp2Component_mat_chip_105_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 36);\n    i0.ɵɵlistener(\"removed\", function Comp2Component_mat_chip_105_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const fruit_r10 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.remove(fruit_r10);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, Comp2Component_mat_chip_105_mat_icon_2_Template, 2, 0, \"mat-icon\", 37);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fruit_r10 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectable\", ctx_r4.selectable)(\"removable\", ctx_r4.removable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r10, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.removable);\n  }\n}\n\nfunction Comp2Component_mat_option_110_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fruit_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", fruit_r14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r14, \" \");\n  }\n}\n\nexport class Comp2Component {\n  constructor(service) {\n    this.service = service;\n    this.visible = true;\n    this.selectable = true;\n    this.removable = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.fruitCtrl = new FormControl();\n    this.fruits = ['Lemon'];\n    this.allFruits = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n    this.Locations = [{\n      id: 1,\n      value: 'Mumbai'\n    }, {\n      id: 2,\n      value: 'Pune'\n    }, {\n      id: 3,\n      value: 'Bangalure'\n    }];\n    this.EmpTypes = [{\n      id: 1,\n      value: 'Full Time'\n    }, {\n      id: 2,\n      value: 'Part Time'\n    }, {\n      id: 3,\n      value: 'Internship'\n    }];\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map(fruit => fruit ? this._filter(fruit) : this.allFruits.slice()));\n  }\n\n  add(event) {\n    const value = (event.value || '').trim(); // Add our fruit\n\n    if (value) {\n      this.fruits.push(value);\n    } // Clear the input value\n\n\n    event.chipInput.clear();\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit) {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n  selected(event) {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allFruits.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  ngOnInit() {}\n\n}\n\nComp2Component.ɵfac = function Comp2Component_Factory(t) {\n  return new (t || Comp2Component)(i0.ɵɵdirectiveInject(i1.SharedService));\n};\n\nComp2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Comp2Component,\n  selectors: [[\"app-comp2\"]],\n  viewQuery: function Comp2Component_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fruitInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocomplete = _t.first);\n    }\n  },\n  decls: 112,\n  vars: 13,\n  consts: [[1, \"container\"], [\"color\", \"primary\", 1, \"tool1\"], [\"src\", \"assets/images/logo.png\", \"alt\", \"logo\", \"width\", \"75\", \"height\", \"50\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with menu icon\", 1, \"example-icon\"], [\"aria-hidden\", \"false\", \"aria-label\", \"Example home icon\"], [1, \"example-spacer\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with share icon\", 1, \"example-icon\"], [1, \"tool2\"], [1, \"arrow1\"], [1, \"arrow2\"], [1, \"normal-form\", 3, \"formGroup\"], [\"cols\", \"1\", \"rowHeight\", \"150px\", 3, \"gutterSize\"], [1, \"controles-container\"], [\"type\", \"hidden\", \"formControlName\", \"$key\"], [1, \"example-full-width\"], [2, \"color\", \"black\", \"font-size\", \"large\"], [\"matInput\", \"\", \"maxlength\", \"50\", \"placeholder\", \"Job Title\"], [\"message\", \"\"], [\"align\", \"start\"], [\"align\", \"end\"], [\"formControlName\", \"Location\", \"placeholder\", \"Location\"], [4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"EmployementType\", \"placeholder\", \"Employement type\"], [\"matInput\", \"\", \"placeholder\", \"Eligibility\"], [\"matInput\", \"\", \"placeholder\", \"Work will include\"], [\"matInput\", \"\", \"placeholder\", \"Note\"], [\"calss\", \"controles-container\"], [\"aria-label\", \"Fruit selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New fruit...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"fruitInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"]],\n  template: function Comp2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-toolbar\", 1);\n      i0.ɵɵelementStart(2, \"span\");\n      i0.ɵɵelement(3, \"img\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵelementStart(5, \"mat-icon\", 4);\n      i0.ɵɵtext(6, \"menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \" \\u00A0 \");\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵtext(9, \"Job openings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"span\", 5);\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵelementStart(12, \"mat-icon\");\n      i0.ɵɵtext(13, \"share\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"div\", 0);\n      i0.ɵɵelementStart(16, \"mat-toolbar\", 7);\n      i0.ɵɵelementStart(17, \"span\");\n      i0.ɵɵelementStart(18, \"b\");\n      i0.ɵɵtext(19, \"Careers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-icon\", 8);\n      i0.ɵɵtext(21, \"chevron_right\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"mat-icon\", 9);\n      i0.ɵɵtext(23, \"chevron_right\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"span\");\n      i0.ɵɵelementStart(25, \"b\");\n      i0.ɵɵtext(26, \"Job openings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-icon\", 8);\n      i0.ɵɵtext(28, \"chevron_right\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"mat-icon\", 9);\n      i0.ɵɵtext(30, \"chevron_right\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"span\");\n      i0.ɵɵelementStart(32, \"b\");\n      i0.ɵɵtext(33, \"Add New openings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"form\", 10);\n      i0.ɵɵelementStart(35, \"mat-grid-list\", 11);\n      i0.ɵɵelementStart(36, \"mat-grid-tile\");\n      i0.ɵɵelementStart(37, \"div\", 12);\n      i0.ɵɵelement(38, \"input\", 13);\n      i0.ɵɵelementStart(39, \"mat-form-field\", 14);\n      i0.ɵɵelementStart(40, \"mat-label\", 15);\n      i0.ɵɵelementStart(41, \"b\");\n      i0.ɵɵtext(42, \"Job Title*:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 16, 17);\n      i0.ɵɵelementStart(45, \"mat-hint\", 18);\n      i0.ɵɵelementStart(46, \"strong\");\n      i0.ɵɵtext(47, \"Job Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"mat-hint\", 19);\n      i0.ɵɵtext(49);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(51, \"mat-form-field\");\n      i0.ɵɵelementStart(52, \"mat-label\", 15);\n      i0.ɵɵelementStart(53, \"b\");\n      i0.ɵɵtext(54, \"Location*:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"mat-select\", 20);\n      i0.ɵɵelementStart(56, \"mat-option\");\n      i0.ɵɵtext(57, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(58, Comp2Component_ng_container_58_Template, 3, 2, \"ng-container\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"mat-hint\", 18);\n      i0.ɵɵelementStart(60, \"strong\");\n      i0.ɵɵtext(61, \"Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(62, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(63, \"mat-form-field\");\n      i0.ɵɵelementStart(64, \"mat-label\", 15);\n      i0.ɵɵelementStart(65, \"b\");\n      i0.ɵɵtext(66, \"Employement type*:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"mat-select\", 22);\n      i0.ɵɵelementStart(68, \"mat-option\");\n      i0.ɵɵtext(69, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(70, Comp2Component_ng_container_70_Template, 3, 2, \"ng-container\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"mat-grid-tile\");\n      i0.ɵɵelementStart(72, \"div\", 12);\n      i0.ɵɵelementStart(73, \"mat-form-field\");\n      i0.ɵɵelementStart(74, \"mat-label\", 15);\n      i0.ɵɵelementStart(75, \"b\");\n      i0.ɵɵtext(76, \"Eligibility*:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(77, \"input\", 23);\n      i0.ɵɵelementStart(78, \"mat-hint\", 18);\n      i0.ɵɵelementStart(79, \"strong\");\n      i0.ɵɵtext(80, \"Eligibility\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(81, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(82, \"mat-form-field\");\n      i0.ɵɵelementStart(83, \"mat-label\", 15);\n      i0.ɵɵelementStart(84, \"b\");\n      i0.ɵɵtext(85, \"Work will include:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(86, \"input\", 24);\n      i0.ɵɵelementStart(87, \"mat-hint\", 18);\n      i0.ɵɵelementStart(88, \"strong\");\n      i0.ɵɵtext(89, \"Work will include\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(90, \" \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(91, \"mat-form-field\");\n      i0.ɵɵelementStart(92, \"mat-label\", 15);\n      i0.ɵɵelementStart(93, \"b\");\n      i0.ɵɵtext(94, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(95, \"input\", 25);\n      i0.ɵɵelementStart(96, \"mat-hint\", 18);\n      i0.ɵɵelementStart(97, \"strong\");\n      i0.ɵɵtext(98, \"Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(99, \"mat-grid-tile\");\n      i0.ɵɵelementStart(100, \"div\", 26);\n      i0.ɵɵelementStart(101, \"mat-label\");\n      i0.ɵɵtext(102, \"Favorite Fruits\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(103, \"mat-chip-list\", 27, 28);\n      i0.ɵɵtemplate(105, Comp2Component_mat_chip_105_Template, 3, 4, \"mat-chip\", 29);\n      i0.ɵɵelementStart(106, \"input\", 30, 31);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function Comp2Component_Template_input_matChipInputTokenEnd_106_listener($event) {\n        return ctx.add($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(108, \"mat-autocomplete\", 32, 33);\n      i0.ɵɵlistener(\"optionSelected\", function Comp2Component_Template_mat_autocomplete_optionSelected_108_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(110, Comp2Component_mat_option_110_Template, 2, 2, \"mat-option\", 34);\n      i0.ɵɵpipe(111, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(44);\n\n      const _r3 = i0.ɵɵreference(104);\n\n      const _r6 = i0.ɵɵreference(109);\n\n      i0.ɵɵadvance(34);\n      i0.ɵɵproperty(\"formGroup\", ctx.service.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"gutterSize\", \"5px\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate1(\"\", _r0.value.length, \" / 50\");\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Locations);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.EmpTypes);\n      i0.ɵɵadvance(35);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.fruitCtrl)(\"matAutocomplete\", _r6)(\"matChipInputFor\", _r3)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(111, 11, ctx.filteredFruits));\n    }\n  },\n  directives: [i2.MatToolbar, i3.MatIcon, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.MatGridList, i5.MatGridTile, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i6.MatFormField, i6.MatLabel, i7.MatInput, i6.MatHint, i8.MatSelect, i9.MatOption, i10.NgForOf, i11.MatChipList, i11.MatChipInput, i4.FormControlDirective, i11.MatChip, i10.NgIf, i11.MatChipRemove],\n  pipes: [i10.AsyncPipe],\n  styles: [\".example-spacer[_ngcontent-%COMP%] {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.normal-form[_ngcontent-%COMP%] {\\r\\n  margin-top: 0px;\\r\\n}\\r\\n\\r\\n.controles-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 5%;\\r\\n  \\r\\n}\\r\\n\\r\\n.controles-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n  width: 25%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXAyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxXQUFXO0VBQ1gsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6ImNvbXAyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1zcGFjZXIge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcblxyXG4ubm9ybWFsLWZvcm0ge1xyXG4gIG1hcmdpbi10b3A6IDBweDtcclxufVxyXG5cclxuLmNvbnRyb2xlcy1jb250YWluZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDUlO1xyXG4gIC8qbWFyZ2luLWJvdHRvbTogMHB4OyovXHJcbn1cclxuXHJcbi5jb250cm9sZXMtY29udGFpbmVyID4gKiB7XHJcbiAgd2lkdGg6IDI1JTtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\surendra\\Desktop\\Angular\\Angularapp\\src\\app\\comp2\\comp2.component.ts","C:\\Users\\surendra\\Desktop\\Angular\\Angularapp\\src\\app\\comp2\\comp2.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {SharedService} from '../shared.service';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ElementRef, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-comp2',\n  templateUrl: './comp2.component.html',\n  styleUrls: ['./comp2.component.css']\n})\nexport class Comp2Component implements OnInit {\n  \n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  fruitCtrl = new FormControl();\n  filteredFruits: Observable<string[]>;\n  fruits: string[] = ['Lemon'];\n  allFruits: string[] = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n  \n  constructor(public service: SharedService) { \n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) => fruit ? this._filter(fruit) : this.allFruits.slice()));\n  }\n  \n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      this.fruits.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allFruits.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  Locations=[\n        {id: 1, value: 'Mumbai'},\n        {id: 2, value: 'Pune'},\n        {id: 3, value: 'Bangalure'}\n  ];\n\n  EmpTypes=[\n    {id: 1, value: 'Full Time'},\n    {id: 2, value: 'Part Time'},\n    {id: 3, value: 'Internship'}\n  ];\n\n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\r\n  <mat-toolbar class=\"tool1\" color=\"primary\">\r\n    <span\r\n      ><img src=\"assets/images/logo.png\" alt=\"logo\" width=\"75\" height=\"50\"\r\n    /></span>\r\n\r\n    <button\r\n      mat-icon-button\r\n      class=\"example-icon\"\r\n      aria-label=\"Example icon-button with menu icon\"\r\n    >\r\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\"\r\n        >menu</mat-icon\r\n      >\r\n    </button>\r\n\r\n    &nbsp;\r\n    <span>Job openings</span>\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <button\r\n      mat-icon-button\r\n      class=\"example-icon\"\r\n      aria-label=\"Example icon-button with share icon\"\r\n    >\r\n      <mat-icon>share</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n</div>\r\n\r\n<br />\r\n\r\n<div class=\"container\">\r\n  <mat-toolbar class=\"tool2\">\r\n    <span><b>Careers</b></span>\r\n    <mat-icon class=\"arrow1\">chevron_right</mat-icon>\r\n    <mat-icon class=\"arrow2\">chevron_right</mat-icon>\r\n    <span><b>Job openings</b></span>\r\n    <mat-icon class=\"arrow1\">chevron_right</mat-icon>\r\n    <mat-icon class=\"arrow2\">chevron_right</mat-icon>\r\n    <span><b>Add New openings</b></span>\r\n  </mat-toolbar>\r\n</div>\r\n\r\n<form [formGroup]=\"service.form\" class=\"normal-form\">\r\n  <mat-grid-list cols=\"1\" rowHeight=\"150px\" [gutterSize]=\"'5px'\">\r\n    <mat-grid-tile>\r\n      <div class=\"controles-container\">\r\n        <input type=\"hidden\" formControlName=\"$key\" />\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Job Title*:</b></mat-label\r\n          >\r\n          <input matInput #message maxlength=\"50\" placeholder=\"Job Title\" />\r\n          <mat-hint align=\"start\"><strong>Job Title</strong> </mat-hint>\r\n          <mat-hint align=\"end\">{{ message.value.length }} / 50</mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Location*:</b></mat-label\r\n          >\r\n          <mat-select formControlName=\"Location\" placeholder=\"Location\">\r\n            <mat-option>None</mat-option>\r\n            <ng-container *ngFor=\"let Location of Locations\">\r\n              <mat-option value=\"{{ Location.id }}\">{{\r\n                Location.value\r\n              }}</mat-option>\r\n            </ng-container>\r\n          </mat-select>\r\n          <mat-hint align=\"start\"><strong>Location</strong> </mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Employement type*:</b></mat-label\r\n          >\r\n          <mat-select\r\n            formControlName=\"EmployementType\"\r\n            placeholder=\"Employement type\"\r\n          >\r\n            <mat-option>None</mat-option>\r\n            <ng-container *ngFor=\"let type of EmpTypes\">\r\n              <mat-option value=\"{{ type.id }}\">{{ type.value }}</mat-option>\r\n            </ng-container>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <div class=\"controles-container\">\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Eligibility*:</b></mat-label\r\n          >\r\n          <input matInput placeholder=\"Eligibility\" />\r\n          <mat-hint align=\"start\"><strong>Eligibility</strong> </mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Work will include:</b></mat-label\r\n          >\r\n          <input matInput placeholder=\"Work will include\" />\r\n          <mat-hint align=\"start\"><strong>Work will include</strong> </mat-hint>\r\n        </mat-form-field>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp;\r\n        <mat-form-field>\r\n          <mat-label style=\"color: black; font-size: large\"\r\n            ><b>Note:</b></mat-label\r\n          >\r\n          <input matInput placeholder=\"Note\" />\r\n          <mat-hint align=\"start\"><strong>Note</strong> </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <div calss=\"controles-container\">\r\n        <mat-label>Favorite Fruits</mat-label>\r\n        <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n              <mat-chip\r\n                *ngFor=\"let fruit of fruits\"\r\n                [selectable]=\"selectable\"\r\n                [removable]=\"removable\"\r\n                (removed)=\"remove(fruit)\">\r\n                {{fruit}}\r\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n              </mat-chip>\r\n              <input\r\n                placeholder=\"New fruit...\"\r\n                #fruitInput\r\n                [formControl]=\"fruitCtrl\"\r\n                [matAutocomplete]=\"auto\"\r\n                [matChipInputFor]=\"chipList\"\r\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                (matChipInputTokenEnd)=\"add($event)\">\r\n          </mat-chip-list>\r\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n              <mat-option *ngFor=\"let fruit of filteredFruits | async\" [value]=\"fruit\">\r\n                {{fruit}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n      </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</form>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}